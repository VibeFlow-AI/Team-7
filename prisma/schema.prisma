generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String   @id @db.Uuid
  role           Role
  email          String   @unique
  mentorProfile  Mentor?
  studentProfile Student?

  @@map("users")
}

model Student {
  id                     String    @id @default(cuid())
  userId                 String    @unique @db.Uuid
  fullName               String
  age                    Int
  contactNumber          String?
  currentEducationLevel  String
  school                 String?
  subjectsOfInterest     String[]
  preferredLearningStyle String?
  learningDisabilities   String?
  bookedSessions         Session[]
  user                   User      @relation(fields: [userId], references: [id])
}

model Mentor {
  id                     String    @id @default(cuid())
  userId                 String    @unique @db.Uuid
  fullName               String
  age                    Int
  contactNumber          String?
  preferredLanguage      String[]
  currentLocation        String?
  shortBio               String
  professionalRole       String
  subjectsToTeach        String[]
  teachingExperience     String
  preferredStudentLevels String[]
  linkedInProfile        String
  githubOrPortfolio      String?
  profilePictureUrl      String?
  user                   User      @relation(fields: [userId], references: [id])
  sessions               Session[]
}

model Session {
  id            String   @id @default(cuid())
  studentId     String
  mentorId      String
  sessionDate   DateTime
  durationHours Int      @default(2)
  status        String   @default("Booked")
  bankSlipUrl   String
  createdAt     DateTime @default(now())
  mentor        Mentor   @relation(fields: [mentorId], references: [id])
  student       Student  @relation(fields: [studentId], references: [id])
}

enum Role {
  STUDENT
  MENTOR
  GUEST
}
